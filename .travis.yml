# Copyright (c) <year> <author> (<email>)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp
dist: trusty

compiler:
  - gcc
  # - clang

env:
  matrix:
    - BUILD_TYPE=Debug TEST_FRAMEWORK=Catch2 COMPILER='g++-7'
    - BUILD_TYPE=Release TEST_FRAMEWORK=Catch2 COMPILER='g++-7'
    - BUILD_TYPE=Debug TEST_FRAMEWORK=GTest COMPILER='g++-7'
    - BUILD_TYPE=Release TEST_FRAMEWORK=GTest COMPILER='g++-7'

matrix:
  exclude:
    # - compiler: clang
    #   env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release COMPILER='g++-7'
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Debug TEST_FRAMEWORK=GTest COMPILER='g++-7'

addons:
  apt:
    sources: ['ubuntu-toolchain-r-test']
    packages:
      - g++-7
      - catch
      - libboost-dev
  coverity_scan:
    project:
      name: "luk036/pgcpp"
      description: "Build submitted via Travis CI"
    notification_email: luk036@gmail.com
    build_command_prepend: "mkdir build; cd build; cmake -DPROJECT_NAME=pgcpp -DTEST_FRAMEWORK=$TEST_FRAMEWORK -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=on .."
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  # - bash scripts/install_cmake.sh
  # - bash scripts/install_doxygen.sh
  # - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++-7" ] && [ "$BUILD_TYPE" == "Debug" ] && [ "$TEST_FRAMEWORK" == "Catch2" ]; then
      echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
      pip install --user cpp-coveralls;
    fi

before_script:
  - export CXX=${COMPILER}

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      cmake -DPROJECT_NAME=pgcpp -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DTEST_FRAMEWORK=$TEST_FRAMEWORK -DBUILD_TESTING=on ..;
      make -j 2;
      ctest -V -j 2;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++-7" ] && [ "$BUILD_TYPE" == "Debug" ] && [ "$TEST_FRAMEWORK" == "Catch2" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi

notifications:
  email: false
  slack:
    rooms:
      - loksu:jErzuILLSNn9qGYkkILvBwje#pgcpp
